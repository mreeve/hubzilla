version: '3.9'

networks:
  hubzilla:
  nginx_external:
    external: true

volumes:
  voldb:
  volweb:

configs:
  nginx_config: 
    file: nginx/nginx.conf
  nginx_default_config:
    file: nginx/default.conf.template
    
services:
  traefik:
    # create external network with 'docker network create NETWORKNAME'
    image: traefik:2.10
    restart: always
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - hubzilla
    command:
      - --log.level=DEBUG
      - --log.filepath=/proc/self/fd/1
      # - --tracing=true
      # - --tracing.serviceName=traefik
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=install_hubzilla
    
  nginx:
    image: nginx:alpine
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
      - source: nginx_default_config
        target: /etc/nginx/templates/default.conf.template
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: .template
      SERVER_NAME: ${DOMAIN}
    depends_on:
      - hubzilla
    volumes:
      - volweb:/var/www/html
    networks:
      - hubzilla
    #   - nginx_external
    labels:
      - traefik.enable=true
      - traefik.port=80
      - traefik.docker.network=install_hubzilla
      - traefik.http.routers.nginx.rule=Host(`localhost`)
      - traefik.http.routers.nginx.entrypoints=web
      # - traefik.http.services.nginx.loadbalancer.server.port=80
      # - traefik.http.routers.nginx.tls=true
      # - traefik.http.routers.nginx.tls.certresolver=le
      # - traefik.http.routers.nginx.entrypoints=websecure
      # - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      # - traefik.http.routers.redirect.rule=Host(`${DOMAIN}`)
      # - traefik.http.routers.redirect.middlewares=redirect-to-https
      # - traefik.http.routers.redirect.entrypoints=web

  hubzilla:
    build:
      context: ../
      dockerfile: Dockerfile
    depends_on:
      - postgres
    env_file: .env
    environment:
      HUBZILLA_DOMAIN: ${DOMAIN}
      HUBZILLA_ADMIN: ${ADMIN_EMAIL}
      ADDON_LIST: ${ADDON_LIST}
    networks:
      - hubzilla
    volumes:
      - volweb:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.port=80
      - traefik.docker.network=install_hubzilla
      - traefik.http.routers.hubzilla.rule=Path(`/{path:.*\\.(php|php8)$}`)
      
  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - voldb:/var/lib/postgresql/data
    networks:
      - hubzilla
  # cron:
  #   build:
  #     context: ../
  #     dockerfile: Dockerfile
  #   env_file: .env
  #   depends_on:
  #     - postgres
  #   command: ["crond", "-f"]
  #   networks:
  #     - hubzilla
  #   volumes:
  #     - volweb:/var/www/html
